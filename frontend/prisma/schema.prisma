generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String       @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          UserRole     @default(USER)
  nummer        Int?
  accounts      Account[]
  Hovedstyret   Hovedstyret?
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model Hovedstyret {
  rolle     String
  text      String
  active    Boolean
  image     String
  updatedAt DateTime
  userID    String   @unique
  User      User     @relation(fields: [userID], references: [id])

  @@id([rolle, userID])
}

model komite {
  id    String  @id @default(cuid())
  navn  String
  leder String?
  text1 String?
  text2 String?
  text3 String?
  bilde String
  mail  String?
  mappe String
}

enum UserRole {
  ADMIN
  USER
}

